<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-04-05T12:54:34+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">YORDAN.IO</title><subtitle>A blog about computer science and linguistics</subtitle><author><name>Yordan Grigorov</name></author><entry><title type="html">Running ast Parsetrees as Separate Processes</title><link href="http://localhost:4000/programming/pymode/" rel="alternate" type="text/html" title="Running ast Parsetrees as Separate Processes" /><published>2021-04-02T00:00:00+02:00</published><updated>2021-04-02T00:00:00+02:00</updated><id>http://localhost:4000/programming/pymode</id><content type="html" xml:base="http://localhost:4000/programming/pymode/">&lt;p&gt;Pyrope
installation
bad shortcuts, echo(has(“python3”))&lt;/p&gt;

&lt;p&gt;Pymode
installation
no documentation in the beginnign
:helptags
sudo vim&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/library/multiprocessing.html&quot;&gt;multiprocess.Process&lt;/a&gt;
&lt;a href=&quot;https://en.wikipedia.org/wiki/Fork_(system_call)&quot;&gt;fork&lt;/a&gt;
&lt;strong&gt;Process&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                                              
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;warning-this-is-just-speculative-not-tested&quot;&gt;Warning this is just speculative, not tested&lt;/h2&gt;</content><author><name>Yordan Grigorov</name></author><category term="Programming" /><category term="python" /><category term="compilers" /><category term="vim" /><summary type="html">Pyrope installation bad shortcuts, echo(has(“python3”)) Pymode installation no documentation in the beginnign :helptags sudo vim multiprocess.Process fork Process: p.start() Warning this is just speculative, not tested</summary></entry><entry><title type="html">Running ast Parsetrees as Separate Processes</title><link href="http://localhost:4000/programming/ast_multiprocessing/" rel="alternate" type="text/html" title="Running ast Parsetrees as Separate Processes" /><published>2021-03-11T00:00:00+01:00</published><updated>2021-03-11T00:00:00+01:00</updated><id>http://localhost:4000/programming/ast_multiprocessing</id><content type="html" xml:base="http://localhost:4000/programming/ast_multiprocessing/">&lt;p&gt;Python’s &lt;a href=&quot;https://docs.python.org/3/library/multiprocessing.html&quot;&gt;multiprocess.Process&lt;/a&gt; makes &lt;a href=&quot;https://en.wikipedia.org/wiki/Fork_(system_call)&quot;&gt;fork&lt;/a&gt;ing and &lt;a href=&quot;https://en.wikipedia.org/wiki/Spawn_(computing)&quot;&gt;spawn&lt;/a&gt;ing intuitive - you don’t have to worry about opening a new Python interpreter manually, etc. Here is a snippet that demonstrates the most interesting part of &lt;strong&gt;Process&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                                              
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In short, the function &lt;strong&gt;fn&lt;/strong&gt; will run in parallel, in a new process. You may pass positional parameters &lt;strong&gt;args&lt;/strong&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/Named_parameter&quot;&gt;named parameters&lt;/a&gt; &lt;strong&gt;kwargs&lt;/strong&gt;, but these have to be &lt;a href=&quot;https://docs.python.org/3/library/pickle.html&quot;&gt;picklable&lt;/a&gt;. To generalize, the &lt;strong&gt;Process&lt;/strong&gt; API allows us to pass functions to the new process, but what if we want to pass and execute an AST Parsetree instead? Let’s say we have the following scenario:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;codestring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import ...&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parsetree1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;codestring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parsetree2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mod_parsetree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parsetree1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;???&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                                              
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What would the target be?&lt;/p&gt;

&lt;p&gt;Considering that:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parsetree2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;is what I ultimately want to happen inside the new process, my first approach was to pass &lt;a href=&quot;https://docs.python.org/3/library/functions.html#exec&quot;&gt;exec&lt;/a&gt; with parsetree2 as the first argument. However, this raized an error because apparently, parsetrees are not picklable (why not though?).&lt;/p&gt;

&lt;p&gt;Since strings are picklable, I quickly found out that the &lt;a href=&quot;https://docs.python.org/3/library/ast.html&quot;&gt;ast&lt;/a&gt; module has an &lt;strong&gt;unparse&lt;/strong&gt; function which will return the &lt;strong&gt;str&lt;/strong&gt; equivalent of a given parsetree. Sadly, this function is only available since Python 3.9 but I was bound to Python 3.8. &lt;a href=&quot;https://pypi.org/project/astunparse/&quot;&gt;astunparse&lt;/a&gt; came to the rescue - it’s a simple library (and beautifully written, check the &lt;a href=&quot;https://github.com/simonpercivall/astunparse&quot;&gt;code&lt;/a&gt; btw.) that gives us back the missing &lt;strong&gt;unparse&lt;/strong&gt; functionality. Now we can do:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;python3 &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;astunparse
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;codestring1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import ...&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parsetree1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;codestring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parsetree2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mod_parsetree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parsetree1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;codestring2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astunparse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unparse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parsetree2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;codestring2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;    
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                                              
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And the day is saved! I am not happy that I had to include another dependency, which may or may not work for all possible input cases (e.g. complex programs). I wonder if this could be done in a simpler way:&lt;/p&gt;

&lt;h2 id=&quot;warning-this-is-just-speculative-not-tested&quot;&gt;Warning this is just speculative, not tested&lt;/h2&gt;

&lt;p&gt;Since &lt;strong&gt;multiprocess.Process&lt;/strong&gt; allows us to pass a function to the other process, we could prepare a special function using &lt;a href=&quot;https://docs.python.org/3/library/functools.html&quot;&gt;functools&lt;/a&gt; to execute there. This would look something among the lines of:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def exectree(tree):
    exec(tree):
foreign_function = partial(exectree,parsetree2)
p = mp.Process(target=exec)    
p.start()                                              
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notice that we don’t have to pass any parameters to the other process this time, because they are embedded in the function we are passing.&lt;/p&gt;</content><author><name>Yordan Grigorov</name></author><category term="Programming" /><category term="python" /><category term="parallelism" /><category term="compilers" /><summary type="html">Python’s multiprocess.Process makes forking and spawning intuitive - you don’t have to worry about opening a new Python interpreter manually, etc. Here is a snippet that demonstrates the most interesting part of Process: p = mp.Process(target=fn, args=args, kwargs=kwargs) p.start() In short, the function fn will run in parallel, in a new process. You may pass positional parameters args or named parameters kwargs, but these have to be picklable. To generalize, the Process API allows us to pass functions to the new process, but what if we want to pass and execute an AST Parsetree instead? Let’s say we have the following scenario: codestring=&quot;import ...&quot; parsetree1=ast.parse(codestring) parsetree2=mod_parsetree(parsetree1) p = mp.Process(target=???, args=args, kwargs=kwargs) p.start() What would the target be? Considering that: exec(parsetree2) is what I ultimately want to happen inside the new process, my first approach was to pass exec with parsetree2 as the first argument. However, this raized an error because apparently, parsetrees are not picklable (why not though?). Since strings are picklable, I quickly found out that the ast module has an unparse function which will return the str equivalent of a given parsetree. Sadly, this function is only available since Python 3.9 but I was bound to Python 3.8. astunparse came to the rescue - it’s a simple library (and beautifully written, check the code btw.) that gives us back the missing unparse functionality. Now we can do: sudo python3 -m pip install astunparse and codestring1=&quot;import ...&quot; parsetree1=ast.parse(codestring) parsetree2=mod_parsetree(parsetree1) codestring2=astunparse.unparse(parsetree2) p = mp.Process(target=exec, args=(codestring2)) p.start() And the day is saved! I am not happy that I had to include another dependency, which may or may not work for all possible input cases (e.g. complex programs). I wonder if this could be done in a simpler way: Warning this is just speculative, not tested Since multiprocess.Process allows us to pass a function to the other process, we could prepare a special function using functools to execute there. This would look something among the lines of: def exectree(tree): exec(tree): foreign_function = partial(exectree,parsetree2) p = mp.Process(target=exec) p.start() Notice that we don’t have to pass any parameters to the other process this time, because they are embedded in the function we are passing.</summary></entry><entry><title type="html">Sssibilants</title><link href="http://localhost:4000/languages/sssibilants/" rel="alternate" type="text/html" title="Sssibilants" /><published>2020-11-01T00:00:00+01:00</published><updated>2020-11-01T00:00:00+01:00</updated><id>http://localhost:4000/languages/sssibilants</id><content type="html" xml:base="http://localhost:4000/languages/sssibilants/">&lt;p&gt;The “s”s and the “z”s can be as diverse and interesting as the vowels, but I haven’t often had the chance to discover the minute differences between the different variants. The languages around me aren’t as rich in sibilants as they are in vowels and I haven’t had the practical need to differentiate between the allophones. Here is a theory of the “s”s I’ve heard and believe I can differentiate:&lt;/p&gt;

&lt;p&gt;Retro Bulgarian (Todor Zhivkov, Baba Vanche): Laminal, Dento-alveolar. It’s hissy, but it’s not a clear perfect sound, because of the teeth, sometimes you can see their tongues stick out. Very front, similar to French and some Germans (“theory” might sound like “seory”)&lt;/p&gt;

&lt;p&gt;Modern Bulgarian (me, Lyubi, who else?): Laminal, alveolar. A hushed version of the Retro Bulgarian. Trying to prononunce the Retro Bulgarian makes me feel like I am mocking an old person. The exact position on the hard palate varies depending on emphasis and co-articulation but it’s often where the “sh” sound is, but the groove of the tongue is narrower, so to make a distinction.&lt;/p&gt;

&lt;p&gt;USA English: Of course it varies a lot, but there is a very englishy “s” that I believe is done with the &lt;strong&gt;tip&lt;/strong&gt; of the tongue just behind the teeth. It’s the sound you make if you try very hard to imitate the hiss of a snake. The other “s”s here are not so snake-like in comparison. Same for the “z”s. The English “z”s are much closer to the buzzing of the bees. The english “s”s and “b”s I am describing are what I call “perfect” because they don’t remind you of any particular body anatomy when you hear the sound. In comparison, hearing a French “s” you think “Tongue is close to the teeth!”, but an english “s” could be more easily confused for a non-human sound, because it’s so clear and doesn’t remind you of teeth, tongue or saliva.
French is like Retro Bulgarian but there’s more “th” in there. That’s also probably why they confuse the English “th” with a “s” instead of “t” like Bulgarians do.&lt;/p&gt;

&lt;p&gt;German varies from French to English&lt;/p&gt;

&lt;p&gt;What about Russian?&lt;/p&gt;</content><author><name>Yordan Grigorov</name></author><category term="Languages" /><category term="phonetics" /><summary type="html">The “s”s and the “z”s can be as diverse and interesting as the vowels, but I haven’t often had the chance to discover the minute differences between the different variants. The languages around me aren’t as rich in sibilants as they are in vowels and I haven’t had the practical need to differentiate between the allophones. Here is a theory of the “s”s I’ve heard and believe I can differentiate: Retro Bulgarian (Todor Zhivkov, Baba Vanche): Laminal, Dento-alveolar. It’s hissy, but it’s not a clear perfect sound, because of the teeth, sometimes you can see their tongues stick out. Very front, similar to French and some Germans (“theory” might sound like “seory”) Modern Bulgarian (me, Lyubi, who else?): Laminal, alveolar. A hushed version of the Retro Bulgarian. Trying to prononunce the Retro Bulgarian makes me feel like I am mocking an old person. The exact position on the hard palate varies depending on emphasis and co-articulation but it’s often where the “sh” sound is, but the groove of the tongue is narrower, so to make a distinction. USA English: Of course it varies a lot, but there is a very englishy “s” that I believe is done with the tip of the tongue just behind the teeth. It’s the sound you make if you try very hard to imitate the hiss of a snake. The other “s”s here are not so snake-like in comparison. Same for the “z”s. The English “z”s are much closer to the buzzing of the bees. The english “s”s and “b”s I am describing are what I call “perfect” because they don’t remind you of any particular body anatomy when you hear the sound. In comparison, hearing a French “s” you think “Tongue is close to the teeth!”, but an english “s” could be more easily confused for a non-human sound, because it’s so clear and doesn’t remind you of teeth, tongue or saliva. French is like Retro Bulgarian but there’s more “th” in there. That’s also probably why they confuse the English “th” with a “s” instead of “t” like Bulgarians do. German varies from French to English What about Russian?</summary></entry><entry><title type="html">East Bulgarian soft - hard “a” difference</title><link href="http://localhost:4000/languages/softharda/" rel="alternate" type="text/html" title="East Bulgarian soft - hard “a” difference" /><published>2020-09-28T00:00:00+02:00</published><updated>2020-09-28T00:00:00+02:00</updated><id>http://localhost:4000/languages/softharda</id><content type="html" xml:base="http://localhost:4000/languages/softharda/">&lt;p&gt;East Bulgarian apparently makes a distinction between soft “a” and a hard “a” sounds, following the same rules as Russian. Do note, that the vowel qualities are still very different from Russian.&lt;/p&gt;

&lt;p&gt;https://audio.dict.cc/speak.audio.v2.php?error_as_text=1&amp;amp;type=mp3&amp;amp;id=192504&amp;amp;lang=bg_rec_ip&amp;amp;lp=BGDE&lt;/p&gt;

&lt;p&gt;Баня from dict.cc user stuny&lt;/p&gt;

&lt;p&gt;https://audio.dict.cc/speak.audio.v2.php?error_as_text=1&amp;amp;type=mp3&amp;amp;id=192504&amp;amp;lang=bg_rec_ip&amp;amp;lp=BGDE&lt;/p&gt;

&lt;p&gt;https://audio.dict.cc/speak.audio.v2.php?error_as_text=1&amp;amp;type=mp3&amp;amp;id=1079035&amp;amp;lang=rec&amp;amp;lp=BGDE&lt;/p&gt;

&lt;p&gt;Ям from dict.cc user stuny&lt;/p&gt;

&lt;p&gt;https://audio.dict.cc/speak.audio.v2.php?error_as_text=1&amp;amp;type=mp3&amp;amp;id=1079035&amp;amp;lang=rec&amp;amp;lp=BGDE&lt;/p&gt;

&lt;p&gt;The “a” in баня noticeably backer than a Sofian pronunciation and the “a” in ям is noticeably fronter.  I would describe the east hard “a” as similar to the one in Standard German, which I also believe to be the same as the LOT vowel in Standard American (unmerged).
TODO: draw on vowel chart and compare the soft a to some other sound I know.&lt;/p&gt;</content><author><name>Yordan Grigorov</name></author><category term="Languages" /><category term="phonetics" /><summary type="html">East Bulgarian apparently makes a distinction between soft “a” and a hard “a” sounds, following the same rules as Russian. Do note, that the vowel qualities are still very different from Russian. https://audio.dict.cc/speak.audio.v2.php?error_as_text=1&amp;amp;type=mp3&amp;amp;id=192504&amp;amp;lang=bg_rec_ip&amp;amp;lp=BGDE Баня from dict.cc user stuny https://audio.dict.cc/speak.audio.v2.php?error_as_text=1&amp;amp;type=mp3&amp;amp;id=192504&amp;amp;lang=bg_rec_ip&amp;amp;lp=BGDE https://audio.dict.cc/speak.audio.v2.php?error_as_text=1&amp;amp;type=mp3&amp;amp;id=1079035&amp;amp;lang=rec&amp;amp;lp=BGDE Ям from dict.cc user stuny https://audio.dict.cc/speak.audio.v2.php?error_as_text=1&amp;amp;type=mp3&amp;amp;id=1079035&amp;amp;lang=rec&amp;amp;lp=BGDE The “a” in баня noticeably backer than a Sofian pronunciation and the “a” in ям is noticeably fronter. I would describe the east hard “a” as similar to the one in Standard German, which I also believe to be the same as the LOT vowel in Standard American (unmerged). TODO: draw on vowel chart and compare the soft a to some other sound I know.</summary></entry><entry><title type="html">Post: Standard</title><link href="http://localhost:4000/languages/phonrez/" rel="alternate" type="text/html" title="Post: Standard" /><published>2020-08-13T00:00:00+02:00</published><updated>2020-08-13T00:00:00+02:00</updated><id>http://localhost:4000/languages/phonrez</id><content type="html" xml:base="http://localhost:4000/languages/phonrez/">&lt;h1 id=&quot;some-phonetic-resources-i-like-to-browse-in-my-spare-time&quot;&gt;Some phonetic resources I like to browse in my spare time&lt;/h1&gt;

&lt;p&gt;http://www.homophone.com/  A tool for finding homophones&lt;/p&gt;

&lt;p&gt;http://phonetic-blog.blogspot.com/  John Wells’s phonetic blog&lt;/p&gt;

&lt;p&gt;https://english.stackexchange.com/questions/tagged/pronunciation  There’s good stuff here sometimes. But not every time&lt;/p&gt;

&lt;p&gt;http://teflpedia.com/Main_Page  Very good decoding examples&lt;/p&gt;

&lt;p&gt;https://www1.essex.ac.uk/psychology/cpwd/search_the_database.htm  Very good phonemic search&lt;/p&gt;

&lt;p&gt;Anki&lt;/p&gt;</content><author><name>Yordan Grigorov</name></author><category term="Languages" /><category term="cheatsheet" /><summary type="html">Some phonetic resources I like to browse in my spare time http://www.homophone.com/ A tool for finding homophones http://phonetic-blog.blogspot.com/ John Wells’s phonetic blog https://english.stackexchange.com/questions/tagged/pronunciation There’s good stuff here sometimes. But not every time http://teflpedia.com/Main_Page Very good decoding examples https://www1.essex.ac.uk/psychology/cpwd/search_the_database.htm Very good phonemic search Anki</summary></entry><entry><title type="html">Bulgarian vs English vs German vowel nasalization</title><link href="http://localhost:4000/languages/nazalization/" rel="alternate" type="text/html" title="Bulgarian vs English vs German vowel nasalization" /><published>2020-07-15T00:00:00+02:00</published><updated>2020-07-15T00:00:00+02:00</updated><id>http://localhost:4000/languages/nazalization</id><content type="html" xml:base="http://localhost:4000/languages/nazalization/">&lt;p&gt;Bulgarian seem to nasalize vowels after a nasal consonant:”не”, “ме”. American English and Standard German seem to nasalize vowels in front of the nasal consonant:&lt;/p&gt;

&lt;p&gt;American “in”&lt;/p&gt;

&lt;p&gt;American “on”&lt;/p&gt;

&lt;p&gt;German “Bahn”.&lt;/p&gt;

&lt;p&gt;Compare to:&lt;/p&gt;

&lt;p&gt;American “not”&lt;/p&gt;

&lt;p&gt;American “ma”&lt;/p&gt;

&lt;p&gt;This also explains why Americans often say prints instead of prince, and cents instead of sense. The velum closes right after the nasal consonant, resulting in a moment of “n with velum closed” which causes the slight “t” sound before the s.
In Bulgarian, we can pronounce “ns” without inserting a t, because our s is actually nasalised, although that cant be heard.
American is generally nasalizes more.
British English also generally nasalizes before the consonant, but seems like educated speech (RP) doesn’t follow this rule.&lt;/p&gt;

&lt;p&gt;Also, the combination “dn” is not possible in English. Apparently, native English speakers have difficulties with this pronunciation when learning languages like Russian.&lt;/p&gt;

&lt;p&gt;Source: A CROSS-LINGUISTIC TYPOLOGY OF NASAL HARMONY http://roa.rutgers.edu/files/405-0800/roa-405-walker-3.pdf&lt;/p&gt;</content><author><name>Yordan Grigorov</name></author><category term="Languages" /><category term="phonetics" /><summary type="html">Bulgarian seem to nasalize vowels after a nasal consonant:”не”, “ме”. American English and Standard German seem to nasalize vowels in front of the nasal consonant: American “in” American “on” German “Bahn”. Compare to: American “not” American “ma” This also explains why Americans often say prints instead of prince, and cents instead of sense. The velum closes right after the nasal consonant, resulting in a moment of “n with velum closed” which causes the slight “t” sound before the s. In Bulgarian, we can pronounce “ns” without inserting a t, because our s is actually nasalised, although that cant be heard. American is generally nasalizes more. British English also generally nasalizes before the consonant, but seems like educated speech (RP) doesn’t follow this rule. Also, the combination “dn” is not possible in English. Apparently, native English speakers have difficulties with this pronunciation when learning languages like Russian. Source: A CROSS-LINGUISTIC TYPOLOGY OF NASAL HARMONY http://roa.rutgers.edu/files/405-0800/roa-405-walker-3.pdf</summary></entry><entry><title type="html">List of words normally affected by Canadian Raising</title><link href="http://localhost:4000/languages/canraize/" rel="alternate" type="text/html" title="List of words normally affected by Canadian Raising" /><published>2020-06-05T00:00:00+02:00</published><updated>2020-06-05T00:00:00+02:00</updated><id>http://localhost:4000/languages/canraize</id><content type="html" xml:base="http://localhost:4000/languages/canraize/">&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;words&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;like&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;right&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;night&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;white&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;liked&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;might&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;light&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;quite&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;frightened&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bike&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;life&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bright&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;wife&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mike&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;likes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;kite&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;write&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;exciting&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;fight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;recycling&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lights&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;myself&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tonight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;viking&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;excited&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;delight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;satellites&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;site&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;satellite&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;writing&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;midnight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;wildlife&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lighthouse&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mighty&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;piper&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bite&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;knights&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sunlight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;vikings&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;pipe&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;pipes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;stripes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;brightly&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;moonlight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;goodnight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lightning&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;united&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;delighted&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;kites&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;knight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bicycle&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;twice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;invited&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;fright&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nights&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;wipe&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;frighten&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;invite&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lighthouses&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tightly&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;trifle&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;icy&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ripe&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;alright&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;excitement&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;frightening&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;items&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bikes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cyclists&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;likely&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lifeboat&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;wiped&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;politely&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sights&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;microwave&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;recycled&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;rice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;brighten&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;excitedly&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;heights&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lighter&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lifeguard&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;dice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;icing&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;slices&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;daylight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;delightful&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;fighting&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lighting&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sighted&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tighter&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;recycle&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;spike&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;knife&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;swipe&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;type&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;types&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;wiping&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;appetite&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bites&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;brightened&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;brighter&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;despite&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;flight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;flights&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;frightfully&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;night-time&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;overnight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;slightly&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;upright&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;whites&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;writer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;spiky&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;strike&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bicycles&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;crisis&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nicer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;slice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;woodlice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;python&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;hosepipe&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;striped&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;stripy&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;brightening&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;campsite&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;inviting&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;item&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lighted&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nightmare&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nightmares&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;night’s&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;polite&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;spite&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tightrope&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;writes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;alike&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cycle&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cycles&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cycling&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;life-cycle&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;motorbike&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;strikes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;life-cycle&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;life-size&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lifetime&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;icebox&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ice-cold&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;icicles&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nicely&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nicest&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;price&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;spices&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;drainpipe&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;hypermarket&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;pan-pipes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;piped&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ripening&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ripest&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;stripe&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;typewriter&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;typing&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;viper&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;windpipe&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;alight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;almighty&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bitey&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;blighter&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;brightest&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;entitled&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;eyesight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;fighter&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;fighters&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;fights&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;fortnight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;frighted&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;handwriting&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;height&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;limelight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;meteorite&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;meteorites&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nightcap&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nightdress&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nightfall&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nighties&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;re-united&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;short-sighted&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sites&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;starlight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;termites&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tightened&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;title&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;titles&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;typewriter&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bicarbonate&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cyclist&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;dislike&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;hiked&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lichen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;look-alikes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;microphones&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;microscope&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;spiked&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;unlike&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lifeguards&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;midwife&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;penknife&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;rifle&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;wife’s&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bystanders&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;eyesight&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;field-mice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;half-price&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;icebergs&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iced&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ices&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ice-skating&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;precisely&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;priceless&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sliced&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;spice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;spicy&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;thrice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tricycle&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tricycles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>Yordan Grigorov</name></author><category term="Languages" /><category term="vocabulary" /><category term="cheatsheet" /><summary type="html">words like right night white liked might light mice nice quite frightened ice bike life bright wife mike likes kite write exciting fight recycling lights myself tonight viking excited delight satellites sight site satellite writing midnight tight wildlife lighthouse mighty piper bite knights sunlight vikings pipe pipes stripes brightly moonlight goodnight lightning united delighted kites knight bicycle twice invited fright nights wipe frighten invite lighthouses tightly trifle icy ripe alright excitement frightening items bikes cyclists likely lifeboat wiped politely sights microwave recycled rice brighten excitedly heights lighter lifeguard dice icing slices daylight delightful fighting lighting sighted tighter recycle spike knife swipe type types wiping appetite bites brightened brighter despite flight flights frightfully night-time overnight slightly upright whites writer spiky strike bicycles crisis nicer slice woodlice python hosepipe striped stripy brightening campsite inviting item lighted nightmare nightmares night’s polite spite tightrope writes alike cycle cycles cycling life-cycle motorbike strikes life-cycle life-size lifetime icebox ice-cold icicles nicely nicest price spices drainpipe hypermarket pan-pipes piped ripening ripest stripe typewriter typing viper windpipe alight almighty bitey blighter brightest entitled eyesight fighter fighters fights fortnight frighted handwriting height limelight meteorite meteorites nightcap nightdress nightfall nighties re-united short-sighted sites starlight termites tightened title titles typewriter bicarbonate cyclist dislike hiked lichen look-alikes microphones microscope spiked unlike lifeguards midwife penknife rifle wife’s bystanders eyesight field-mice half-price icebergs iced ices ice-skating lice precisely priceless sliced spice spicy thrice tricycle tricycles</summary></entry></feed>